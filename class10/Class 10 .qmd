---
title: "Class 10: Halloween Mini-Project"
author: "Derek Chang (PID: 16942232)"
format: pdf
---

## 1. Importing Candy Data 

```{r}
candy_file <- read.csv("candy-data.csv", row.names = 1)
head(candy_file)
```

>Q1. How many different candy types are in this dataset?

```{r}
nrow(candy_file)
```
There are 85 different candy types

>Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy_file$fruity)
```
There are 38 fruity candy types. 

##2. What is your favorite candy? 

```{r}
candy_file["Twix",]$winpercent
```
>Q. Findy Fruity candy with a winpercent above 50

```{r}
library(dplyr)
candy_file %>% filter(fruity == 1) %>% filter(winpercent > 50)
```


>Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy_file["Kit Kat",]$winpercent
```

My favorite andy is Kit Kats and the winpercent vlaue is 76.7686.

>Q4. What is the win percent value for Kit Kat? 

The win percent value for kit kat is 76.7686.

```{r}
candy_file["Kit Kat",]$winpercent
```

>Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy_file["Tootsie Roll Snack Bars",]$winpercent
```

The win percent for tootsie rolls is 49.6535.

To get a quick insight into a new dataset some folks like using the skimer package and its `skimr` function 
```{r}
library("skimr")
skimr::skim(candy_file)
```

>Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Looks like the `winpercent` variable or column looks to be on a different scale to the other columns in the dataset, as the other scales are out of 1, and this seems to be out of 100. I will need to scale my data before using PCA or other analysis.



>Q7. What do you think a zero and one represent for the candy$chocolate column?

```{r}
candy_file$chocolate
```


A zero in the `candy$chocolate` column would indicate that the candy is not a chocolate, while a 1 would indicate that the candy is a chocolate. 

>Q8. Plot a histogram of winpercent values

We can do this a few ways, e.g. the "base" R `hist()` function or with `ggplot()`

```{r}
library(ggplot2)
hist(candy_file$winpercent, breaks = 100)
ggplot(candy_file, aes(winpercent)) + 
  geom_histogram(bins = 80) +
  theme_bw()
```


>Q9. Is the distribution of winpercent values symmetrical?

No, the distribution of winpercent values are not symmetrical, as the histogram is not a perfect bell shaped graph.

>Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy_file$winpercent)
```
Since the median is below 50% at 47.83,the center of distribution is below. We are using the median since there are outliers.

>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
fruity.candy <- candy_file %>% filter(fruity == 1) 
summary(fruity.candy$winpercent)
chocolate.candy <- candy_file %>% filter(chocolate == 1)
summary(chocolate.candy$winpercent)
```
On average chocolate candy is higher ranked than fruity candy, with a higher median and mean. Chocolate seems to win more often.

>Q12. Is this difference statistically significant?


```{r}
t.test(chocolate.candy$winpercent, fruity.candy$winpercent)

```

With a very small p-value of 2.87e-08, the difference between chocolate and fruity is statistically significant. Chocolate is statistically better than fruit. 

## 3. Overall Candy Rankings

>Q13. What are the five least liked candy types in this set?

Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, Jawbusters.

```{r}
head(candy_file[order( candy_file$winpercent),], 5)
```

>Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
play <- c("d","a","c")
sort(play)
order(play)

play[ order(play)]
```

```{r}
tail(candy_file[order( candy_file$winpercent),], 5)
```

Snickers, Kit Kat, Twix, Reese's Miniatures, Reese's Peanut Butter cup. are the 5 most popular.

>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy_file, aes(winpercent, rownames(candy_file))) + 
  geom_col() 
```


>Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy_file, aes(winpercent, reorder(rownames(candy_file),winpercent))) + 
  geom_col() 
  
```



I want a more custom color scheme where I can see different categories of candy on the same graph. To do this we can roll our own color vector.

```{r}
# Place Holder Color Vector
mycols <- rep("black", nrow(candy_file))
mycols[as.logical(candy_file$chocolate)] <- "chocolate"
mycols[as.logical(candy_file$bar)] <- "brown"
mycols[as.logical(candy_file$fruity)] <- "pink"
mycols[(row.names(candy_file) == "Kit Kat")] <- "blue"
```

```{r}
ggplot(candy_file, aes(winpercent, reorder(rownames(candy_file),winpercent))) + 
   geom_col(fill = mycols) 
```
>Q17. What is the worst ranked chocolate candy?

Sixlet is the worst ranked chocolate candy 

>Q18. What is the best ranked fruity candy?

Starbursts are the best ranked fruity candy.

## 4. Taking a look at price percent

Plot of winpercent vs price percent to see what the best candy to buy is.


```{r}
mycols[as.logical(candy_file$fruity)] <- "red"
```


```{r}
ggplot(candy_file) + aes(winpercent, pricepercent) +
  geom_point(col = mycols)
```

Adding Labels
```{r}
library(ggrepel)
ggplot(candy_file) + aes(winpercent, pricepercent, label = rownames(candy_file)) +
  geom_point(col = mycols) +
  geom_label()
```

Make the labels non-overlapping
```{r}
library(ggrepel)
ggplot(candy_file) + aes(winpercent, pricepercent, label = rownames(candy_file)) +
  geom_point(col = mycols)  + 
  geom_text_repel(col = mycols, size = 2, max.overlaps = 8)
```

>Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

The Reese's Miniatures are the highest ranked in terms of winpercent for the least money.

>Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy_file$pricepercent, decreasing = TRUE)
head( candy_file[ord,c(11,12)], n=5 )
```

The most expensive are Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, and Hershey's Milk Chocolate. Nik L Nip is the least popular.

>Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

```{r}
ggplot(candy_file) +
  aes(pricepercent, reorder(rownames(candy_file), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy_file), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```


## 5. Exploring the correlation structure.

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy_file)
corrplot(cij, diag = F)
```


>Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and chocolate are two strong anti-correlated variables 

>Q23. Similarly, what two variables are most positively correlated?

Win Percent and Chocolate are the most positively correlated variables. 

#Principal COmponent Analysis

```{r}
pca <-  prcomp(candy_file, scale = T)
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], col = mycols, pch = 16)
```
How do the original variables (columns) contribute to the new PCs. I will look at PC1 here

```{r}
loadings <- as.data.frame(pca$rotation)

ggplot(loadings, aes(PC1, reorder(rownames(loadings), PC1), fill = PC1)) + geom_col()
```

```{r}
my_data <- cbind(candy_file, pca$x[,1:3])
ggplot(my_data, aes(PC1, PC2, size = winpercent/100, text = rownames(my_data), label = rownames(my_data))) + geom_point(col = mycols) + 
  geom_text_repel(size = 2, col = mycols, max.overlaps = 8) 
```


>Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

The original variables of fruity, hard, and pluribus, It makes sense because these variables were positively correlated together compared to the chocolate, which were correlated together.
